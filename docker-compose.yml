services:
  web:
    image: campus-navigation-api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:80" # Host:Container
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - ConnectionStrings__DefaultConnection=Server=db;Port=3306;Database=CampusNavigation;User=root;Password=${DB_PASSWORD:-qwe123}
      - ASPNETCORE_URLS=http://+:80
      # Ensure these are set in your deployment environment if your app uses them
      - APPLICATIONINSIGHTS_CONNECTION_STRING=${APPLICATIONINSIGHTS_CONNECTION_STRING}
      - INSTANCE_NAME=${INSTANCE_NAME}
      - SQL_CONNECTION_STRING=${SQL_CONNECTION_STRING}
    volumes:
      - ./src/CampusNavigation/wwwroot:/app/wwwroot # For easier static file development (local dev)
    depends_on:
      db:
        condition: service_healthy # Start only after 'db' is healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/diagnostics/dbstatus"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s # Allow time for startup before first check
    restart: unless-stopped

  db:
    image: mariadb:10.6
    command: --default-authentication-plugin=mysql_native_password # For compatibility
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD:-qwe123}
      - MYSQL_DATABASE=CampusNavigation # Creates this database
    ports:
      - "3307:3306" # Host:Container
    volumes:
      - mysql-data:/var/lib/mysql # Persist database data
      - ./mysql-init:/docker-entrypoint-initdb.d # Init scripts
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD:-qwe123}"]
      interval: 10s
      timeout: 5s
      retries: 5

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8081:80"  # Access via http://localhost:8081
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${DB_ROOT_PASSWORD:-qwe123}
      UPLOAD_LIMIT: 1G     # Optional: Increase upload limit
    depends_on:
      - db
    restart: unless-stopped

volumes:
  mysql-data: {} # Named volume for MariaDB data

networks:
  default:
    driver: bridge